From 905cd0db8041f8f0089d6bfb9dc61e1d92b91d22 Mon Sep 17 00:00:00 2001
From: Chen Qi <Qi.Chen@windriver.com>
Date: Tue, 10 Jul 2018 15:40:17 +0800
Subject: [PATCH 09/11] distinguish XSI-compliant strerror_r from GNU-specifi
 strerror_r

XSI-compliant strerror_r and GNU-specifi strerror_r are different.

       int strerror_r(int errnum, char *buf, size_t buflen);
                   /* XSI-compliant */

       char *strerror_r(int errnum, char *buf, size_t buflen);
                   /* GNU-specific */

We need to distinguish between them. Otherwise, we'll get an int value
assigned to (char *) variable, resulting in segment fault.

Upstream-Status: Inappropriate [musl specific]

Signed-off-by: Chen Qi <Qi.Chen@windriver.com>
Signed-off-by: fossdd <fossdd@pwned.life>
---
 src/basic/musl_missing.h                 |  2 --
 src/libelogind/sd-bus/bus-error.c        | 11 ++++++++++-
 src/libelogind/sd-journal/journal-send.c |  5 +++++
 3 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/src/basic/musl_missing.h b/src/basic/musl_missing.h
index d8a5bff22..3f592f1c6 100644
--- a/src/basic/musl_missing.h
+++ b/src/basic/musl_missing.h
@@ -26,8 +26,6 @@ void elogind_set_program_name(const char* pcall);
 #include <unistd.h>
 #include <pthread.h> /* for pthread_atfork */
 
-#define strerror_r(e, m, k) (strerror_r(e, m, k) < 0 ? strdup("strerror_r() failed") : m);
-
 /*
  * Possibly TODO according to http://man7.org/linux/man-pages/man3/getenv.3.html
  * + test if the process's effective user ID does not match its real user ID or
diff --git a/src/libelogind/sd-bus/bus-error.c b/src/libelogind/sd-bus/bus-error.c
index f41579770..a5c6e9a3b 100644
--- a/src/libelogind/sd-bus/bus-error.c
+++ b/src/libelogind/sd-bus/bus-error.c
@@ -410,7 +410,12 @@ static void bus_error_strerror(sd_bus_error *e, int error) {
                         return;
 
                 errno = 0;
+#ifndef __GLIBC__
+                strerror_r(error, m, k);
+                x = m;
+#else
                 x = strerror_r(error, m, k);
+#endif
                 if (errno == ERANGE || strlen(x) >= k - 1) {
                         free(m);
                         k *= 2;
@@ -595,8 +600,12 @@ const char* _bus_error_message(const sd_bus_error *e, int error, char buf[static
 
         if (e && e->message)
                 return e->message;
-
+#ifndef __GLIBC__
+        strerror_r(abs(error), buf, ERRNO_BUF_LEN);
+        return buf;
+#else
         return strerror_r(abs(error), buf, ERRNO_BUF_LEN);
+#endif
 }
 
 static bool map_ok(const sd_bus_error_map *map) {
diff --git a/src/libelogind/sd-journal/journal-send.c b/src/libelogind/sd-journal/journal-send.c
index 520b4bda0..5a2c484c7 100644
--- a/src/libelogind/sd-journal/journal-send.c
+++ b/src/libelogind/sd-journal/journal-send.c
@@ -424,7 +424,12 @@ static int fill_iovec_perror_and_send(const char *message, int skip, struct iove
                 char* j;
 
                 errno = 0;
+#ifndef __GLIBC__
+                strerror_r(_saved_errno_, buffer + 8 + k, n - 8 - k);
+                j = buffer + 8 + k;
+#else
                 j = strerror_r(_saved_errno_, buffer + 8 + k, n - 8 - k);
+#endif
                 if (errno == 0) {
                         char error[STRLEN("ERRNO=") + DECIMAL_STR_MAX(int) + 1];
 
-- 
2.50.1

